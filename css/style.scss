
td{
  padding: 5px;
  text-align: center;
}
tfoot{
  border-top: 3px solid black;
}
thead{
  border-bottom: 3px solid black;
}
th{
  padding: 5px;
  text-align: center;
  font-weight: bold;
}
tr:nth-child(even){
  background-color: lightgray;
}
tbody tr:hover{
  background-color: black;
  color: white;
}

//Huge thanks to Javier at; https://codepen.io/JavRok/pen/EXMyXW
$circleSize: 80px;
$borderSize: 10px;
$color: #CCCCCC;
$activeColor: #009FDF;
// vars for box-shadow 'eclipse' trick
$eclipseCircle: 150px;
$initialPosition: -($circleSize + $eclipseCircle + $borderSize);
$pipeHeight: 150px;

.wrapper {
  padding-top: 30px;
  margin-left: -$pipeHeight*2;
}

// LINES / PIPES
.vertical-line {
  background: $color;
  width: $borderSize;
  height: $pipeHeight;
  margin: 0 auto;
  
  &::before {
    content: "";
    display: block;
    background: $activeColor;
    width: 100%;
    height: 0;
    margin: auto;
    
    .animate & {
      transition: height 1s linear;
      height: $pipeHeight;
    }
  }
}

.horizontal-line {
  background: $color;
  height: $borderSize;
  width: $pipeHeight*3 - $circleSize*2;  
  margin: $circleSize auto;
  position: relative;
  left: $pipeHeight*3/2 ;
  
  &::before {
    content: "";
    position: absolute;
    background: $activeColor;
    width: 0;
    height: $borderSize;
    margin: auto;
    left: $borderSize/2;
    
    .animate & {
      transition: width 0.5s linear;
      width: $pipeHeight*2 - $borderSize;
    }
  }
}

.bucket{
  width: $circleSize;
  height: $circleSize;
  background-color: $color;

  &::before{
    content: "";
    background: $activeColor;

    .animate & {
      transition: height 1s linear;
    }
  }
}

// CORNERS for switching side
// Using HTML got difficult, so used SVGs
$cornerOffset: $circleSize + $borderSize/2;

.corner {
  position: absolute;
  width: $circleSize + $borderSize;
  height: $circleSize + $borderSize;    
  &__left {
    top: -$circleSize;
    left: -$cornerOffset;    
  }
  &__right {
    bottom: -$circleSize;
    right: -$cornerOffset;
  }
  
  path {
    // Weirdly, SVG stroke looks smaller than css with same size
    stroke-width: $borderSize + 1px;
    fill: none;
  }
  
  .grey-path {
    stroke: $color;    
  }
  .blue-path {
    stroke: $activeColor;
    // Using dashed stroke trick to simulate the filling
    stroke-dasharray: 200;
    stroke-dashoffset: 200;    
    .animate & {
      animation: corner-fill linear 0.5s forwards;      
    }
  }
}
  
@keyframes corner-fill {
  to {
    stroke-dashoffset: 0;
  }
}


// ANIMATION DELAYS
// The delays would be controlled by Parallax
.animate {
  .anim-1st {
    animation-delay: 0s;
  }
  .anim-2nd::before {
    transition-delay: 1s !important;
  }
  .anim-3rd {
    animation-delay: 2s !important;
  }
  .anim-4th::before {
    transition-delay: 2.4s !important;
  }
  .anim-5th {
    animation-delay: 2.9s !important;
  }
  .anim-6th::before {
     transition-delay: 4.4s !important;
  }
  .anim-7th {
     animation-delay: 4.9s !important;
  }
}

